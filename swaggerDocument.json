{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation Seek Task",
    "version": "1.0.0",
    "description": "API for managing users, tasks, and statuses with authentication"
  },
  "servers": [
    {
      "url": "https://seek-back-node-production.up.railway.app/api/v1",
      "description": "Local server"
    }
  ],
  "components": {
    "schemas": {
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "The user's email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "The user's password"
          },
          "name": {
            "type": "string",
            "example": "John Doe",
            "description": "The user's full name"
          },
          "status": {
            "type": "boolean",
            "example": true,
            "description": "Indicates if the user is active"
          },
          "isVerified": {
            "type": "boolean",
            "example": false,
            "description": "Indicates if the user is verified"
          }
        },
        "required": ["email", "password", "name"]
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "description": "The user's email address"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "description": "The user's password"
          }
        },
        "required": ["email", "password"]
      },
      "TokenDTO": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "JWT token"
          }
        },
        "required": ["token"]
      },
      "CreateTaskDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "New Task",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "example": "Description of the task",
            "description": "Details about the task"
          },
          "statusId": {
            "type": "integer",
            "example": 1,
            "description": "The ID of the task's status"
          }
        },
        "required": ["title", "description", "statusId"]
      },
      "CreateTaskStatusDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "In Progress",
            "description": "The name of the status"
          },
          "description": {
            "type": "string",
            "example": "This status is for tasks in progress",
            "description": "Details about the status"
          },
          "color": {
            "type": "string",
            "example": "#ffcc00",
            "description": "The color associated with this status"
          }
        },
        "required": ["name", "description", "color"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Validation error or duplicate email"
          }
        }
      },
      "get": {
        "summary": "Get all users (paginated)",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of users"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the user"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/verify/{token}": {
      "post": {
        "summary": "Verify a user's account",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The verification token"
          }
        ],
        "responses": {
          "200": {
            "description": "User verified successfully"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Log in a user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful with JWT token"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/users/forgot-password": {
      "post": {
        "summary": "Request a password reset",
        "tags": ["Users"],
        "description": "Sends a password reset link to the user's email address.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com",
                    "description": "The email address associated with the user's account."
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent successfully"
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Validation error (e.g., invalid email format)"
          }
        }
      }
    },
    "/users/update-password": {
      "post": {
        "summary": "Update a user's password",
        "tags": ["Users"],
        "description": "Allows a user to reset their password using a valid token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "description": "The token received in the password reset email."
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "newpassword123",
                    "description": "The new password for the user (minimum 8 characters)."
                  }
                },
                "required": ["token", "newPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "400": {
            "description": "Invalid or expired token, or validation error"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/task": {
      "get": {
        "summary": "Get all tasks",
        "tags": ["Tasks"],
        "responses": {
          "200": {
            "description": "List of tasks"
          }
        }
      },
      "post": {
        "summary": "Create a task",
        "tags": ["Tasks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          }
        }
      }
    },
    "/task/{id}": {
      "put": {
        "summary": "Update a task",
        "tags": ["Tasks"],
        "description": "Updates the details of an existing task by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the task to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Task Title",
                    "description": "The new title for the task."
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated Task Description",
                    "description": "The new description for the task."
                  },
                  "statusId": {
                    "type": "integer",
                    "example": 2,
                    "description": "The new status ID for the task."
                  }
                },
                "required": ["title", "description", "statusId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task updated successfully"
                    },
                    "task": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "title": {
                          "type": "string",
                          "example": "Updated Task Title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Updated Task Description"
                        },
                        "statusId": { "type": "integer", "example": 2 }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "400": {
            "description": "Validation error or duplicate task"
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "tags": ["Tasks"],
        "description": "Deletes an existing task by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the task to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/status": {
      "post": {
        "summary": "Create a new status",
        "tags": ["Statuses"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskStatusDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Status created successfully"
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Retrieve all statuses",
        "tags": ["Statuses"],
        "description": "Gets a list of all task statuses.",
        "responses": {
          "200": {
            "description": "A list of task statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 1 },
                      "name": { "type": "string", "example": "In Progress" },
                      "description": {
                        "type": "string",
                        "example": "Tasks currently in progress"
                      },
                      "color": { "type": "string", "example": "#ffcc00" }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/status/{id}": {
      "put": {
        "summary": "Update a status",
        "tags": ["Statuses"],
        "description": "Updates an existing task status by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the task status to update."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Completed",
                    "description": "The new name of the status."
                  },
                  "description": {
                    "type": "string",
                    "example": "Tasks that have been completed",
                    "description": "A description of the status."
                  },
                  "color": {
                    "type": "string",
                    "example": "#00ff00",
                    "description": "The color associated with this status."
                  }
                },
                "required": ["name", "description", "color"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task status updated successfully"
                    },
                    "taskStatus": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Completed" },
                        "description": {
                          "type": "string",
                          "example": "Tasks that have been completed"
                        },
                        "color": { "type": "string", "example": "#00ff00" }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task status not found"
          },
          "400": {
            "description": "Validation error"
          }
        }
      },
      "delete": {
        "summary": "Delete a status",
        "tags": ["Statuses"],
        "description": "Deletes an existing task status by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "The ID of the task status to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Task status deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Task status deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task status not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}
